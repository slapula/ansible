---
- block:

    # ============================================================
    # Prerequisites
    # ============================================================
    - name: set connection information for all tasks
      set_fact:
        aws_connection_info: &aws_connection_info
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          region: "{{ aws_region }}"
      no_log: true

    - name: Create VPC for use in testing
      ec2_vpc_net:
        name: "{{ resource_prefix }}-vpc"
        cidr_block: 10.22.32.0/23
        tags:
          Name: Ansible ec2_instance Testing VPC
        tenancy: default
        <<: *aws_connection_info
      register: testing_vpc

    - name: Create internet gateway for use in testing
      ec2_vpc_igw:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        state: present
        <<: *aws_connection_info
      register: igw

    - name: Create testing subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ testing_vpc.vpc.id }}"
        cidr: 10.22.32.0/24
        az: "{{ aws_region }}a"
        resource_tags:
          Name: "{{ resource_prefix }}-subnet"
        <<: *aws_connection_info
      register: testing_subnet

    - name: create routing rules
      ec2_vpc_route_table:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        tags:
          created: "{{ resource_prefix }}-route"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        subnets:
          - "{{ testing_subnet.subnet.id }}"
        <<: *aws_connection_info

    - name: create a security group with the vpc
      ec2_group:
        name: "{{ resource_prefix }}-sg"
        description: a security group for ansible tests
        vpc_id: "{{ testing_vpc.vpc.id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        <<: *aws_connection_info
      register: sg

    # ============================================================
    # File Gateway (NFS)
    # ============================================================

    - include_tasks: tasks/file_gateway.yaml

    # ============================================================
    # Volume Gateway (Stored)
    # ============================================================

    - include_tasks: tasks/volume_gateway_stored.yaml

    # ============================================================
    # Volume Gateway (Cached)
    # ============================================================

    - include_tasks: tasks/volume_gateway_cached.yaml

    # ============================================================
    # Tape Gateway (VTL)
    # ============================================================

    - include_tasks: tasks/tape_gateway.yaml

  always:
    # ============================================================
    # Teardown testing resources
    # ============================================================
    - name: remove any instances in the test VPC
      ec2_instance:
        filters:
          vpc_id: "{{ testing_vpc.vpc.id }}"
        state: absent
        <<: *aws_connection_info
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10

    - name: remove ENIs
      ec2_eni_facts:
        filters:
          vpc-id: "{{ testing_vpc.vpc.id }}"
        <<: *aws_connection_info
      register: enis

    - name: delete all ENIs
      ec2_eni:
        eni_id: "{{ item.id }}"
        state: absent
        <<: *aws_connection_info
      until: removed is not failed
      with_items: "{{ enis.network_interfaces }}"
      ignore_errors: yes
      retries: 10

    - name: remove the security group
      ec2_group:
        name: "{{ resource_prefix }}-sg"
        description: a security group for ansible tests
        vpc_id: "{{ testing_vpc.vpc.id }}"
        state: absent
        <<: *aws_connection_info
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10

    - name: remove routing rules
      ec2_vpc_route_table:
        state: absent
        vpc_id: "{{ testing_vpc.vpc.id }}"
        tags:
          created: "{{ resource_prefix }}-route"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        subnets:
          - "{{ testing_subnet.subnet.id }}"
        <<: *aws_connection_info
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10

    - name: remove internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        state: absent
        <<: *aws_connection_info
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10

    - name: remove testing subnet
      ec2_vpc_subnet:
        state: absent
        vpc_id: "{{ testing_vpc.vpc.id }}"
        cidr: 10.22.32.0/24
        <<: *aws_connection_info
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10

    - name: remove the VPC
      ec2_vpc_net:
        name: "{{ resource_prefix }}-vpc"
        cidr_block: 10.22.32.0/23
        state: absent
        tags:
          Name: Ansible Testing VPC
        tenancy: default
        <<: *aws_connection_info
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10
